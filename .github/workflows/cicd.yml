# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI/CD
on:
  push:
    branches: [ feat/cicd ]
  pull_request:
    branches: [ feat/cicd ]

env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: s3://trello-s3-bucket
  AWS_CODE_DEPLOY_APPLICATION: trello-CD
  AWS_CODE_DEPLOY_GROUP: trello-cd-group

permissions:
  contents: read

jobs:
  build-with-gradle:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Build Project
        run: ./gradlew clean build -x test

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.CICD_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.CICD_SECRET_KEY }}

      - name: Upload to S3
        run: aws deploy push --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --ignore-hidden-files --s3-location s3://${{ env.AWS_S3_BUCKET }}/trello/$GITHUB_SHA.zip --source .

      - name: Deploy to EC2 변수 찍어보기
        run: echo "$env.CODE_DEPLOY_APPLITION" | echo "$env.AWS_CODE_DEPLOY_GROUP" | echo "$env.AWS_S3_BUCKET" 
      - name: Deploy to EC2
        run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=${{ env.AWS_S3_BUCKET }},key=trello/$GITHUB_SHA.zip,bundleType=zip

















## This workflow uses actions that are not certified by GitHub.
## They are provided by a third-party and are governed by
## separate terms of service, privacy policy, and support
## documentation.
## This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
## For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle
#
#name: CI/CD
##run-name: Running
#on:
#  push:
#    branches: [ feat/cicd ]
#  pull_request:
#    branches: [ feat/cicd ]
#
#env:
#  AWS_REGION: ap-northeast-2
#  AWS_S3_BUCKET: trello-s3-bucket
#  AWS_CODE_DEPLOY_APPLICATION: trello-CD
#  AWS_CODE_DEPLOY_GROUP: trello-cd-group
#
#permissions:
#  contents: read
#
#jobs:
#  build-with-gradle:
#    runs-on: ubuntu-20.04
#
#    steps:
#    - uses: actions/checkout@v3
#      with:
#        ref: dev
#    - name: Set up JDK 17
#      uses: actions/setup-java@v3
#      with:
#        java-version: '17'
#        distribution: 'corretto'
#    - name: gradlew에 실행 권한 부여
#      run: chmod +x ./gradlew
#
#    - name: 프로젝트 빌드
#      run: ./gradlew clean build -x test
#    - name: AWS credential 설정
#      uses: aws-actions/configure-aws-credentials@v1
#      with:
#        aws-region: ${{ env.AWS_REGION }}
#        aws-access-key-id: ${{ secrets.CICD_ACCESS_KEY }}
#        aws-secret-access-key: ${{ secrets.CICD_SECRET_KEY }}
#    - name: S3에 업로드
#      run: aws deploy push --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --ignore-hidden-files --s3-location s3://${{ env.AWS_S3_BUCKET }}/trello/$GITHUB_SHA.zip --source .
##      run: aws deploy push --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --ignore-hidden-files --s3-location s3://$AWS_S3_BUCKET/trello/$GITHUB_SHA.zip --source .
#    - name: EC2에 배포
#      run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=${{ env.AWS_S3_BUCKET }},key=trello/$GITHUB_SHA.zip,bundleType=zip
##      run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=$AWS_S3_BUCKET,key=trello/$GITHUB_SHA.zip,bundleType=zip
#
#      # uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
#      # with:
#      #   arguments: build
